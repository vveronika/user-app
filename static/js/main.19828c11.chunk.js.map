{"version":3,"sources":["redux/reducers/users.ts","redux/actionTypes.ts","redux/reducers/index.ts","redux/store.ts","screens/Home/home.styled.ts","redux/actions/users.ts","helpers/apiHelpers.ts","helpers/constants.ts","components/ListWrapper/list-wrapper.styled.ts","app.styled.ts","components/ModalWrapper/modal-wrapper.styled.ts","components/BaseText/base-text.styled.ts","components/BaseText/index.tsx","helpers/localStateHelpers.ts","components/BaseButton/base-button.styled.ts","components/BaseButton/index.tsx","components/CloseButton/close-button.styled.ts","components/CloseButton/index.tsx","components/ModalWrapper/index.tsx","components/ListItem/list-item.styled.ts","components/ListItem/index.tsx","components/UserContactDetails/user-contact-details.styled.ts","components/UserDetailRow/user-detail-row.styled.ts","components/UserDetailRow/index.tsx","components/UserContactDetails/index.tsx","components/ModalUserDetails/modal-user-details.styled.ts","components/ModalHeader/modal-header.styled.ts","components/ModalHeader/index.tsx","components/ModalUserDetails/index.tsx","components/ListWrapper/index.tsx","components/PageTitle/page-title.styled.ts","components/PageTitle/index.tsx","components/PageSubtitle/page-subtitle.styled.ts","components/PageSubtitle/index.tsx","components/Loader/index.tsx","screens/Home/index.tsx","screens/NotFound/not-found.styled.ts","screens/NotFound/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","users","loading","fetchError","reducer","state","action","type","payload","concat","combineReducers","usersReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","PageHeaderWrapper","styled","div","LoaderWrapper","fetchUsers","dispatch","setTimeout","url","fetch","then","response","ok","Error","statusText","json","res","catch","failed","ListContainer","theme","lightGrey","highlight","basicFont","bluePrimary","blueBorder","basicBackground","greenPrimary","greenLight","grey","white","black","transparent","bold","regular","tinyLabel","largeTitle","defaultTitle","largeSubtitle","defaultSubtitle","buttonTransition","background","primary","warning","default","font","border","backgroundHover","fontHover","borderHover","Overlay","ModalContent","TitleWrapper","ModalHeader","Text","p","props","BaseText","text","toggleBodyOverflow","overflow","document","body","style","getStyles","property","appearance","Button","button","Icon","FontAwesomeIcon","BaseButton","label","onClick","disabled","icon","children","CloseButton","ModalWrapper","activator","modalTitle","onSubmit","submitLabel","buttonAppereance","useState","show","setShow","useEffect","content","createPortal","ListItemWrapper","DetailsWrapper","ButtonWrapper","ListItem","username","email","onItemClick","DetailRow","Label","UserDetailRow","secondLineText","UserContactDetails","name","userName","phone","address","suite","street","zipcode","city","ContentWrapper","HeaderWrapper","title","ModalUserDetails","id","onDelete","toString","ListWrapper","items","map","item","key","Title","h1","size","fontSize","PageTitle","Subtitle","span","PageSubtitle","Loader","color","toast","configure","connect","error","length","PageWrapper","NotFound","history","useHistory","push","library","add","fab","faTrashAlt","faPlus","faTimes","App","createBrowserHistory","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.19828c11.chunk.js","sourcesContent":["import { UsersStateType, UsersActions } from '../../models/types';\nimport {\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS,\n  FETCH_USERS_FAILED,\n} from '../actionTypes';\n\nconst initialState: UsersStateType = {\n  users: [],\n  loading: true,\n  fetchError: false,\n};\n\nconst reducer = (state = initialState, action: UsersActions) => {\n  switch (action.type) {\n    case FETCH_USERS:\n      return {\n        ...state,\n        loading: true,\n        fetchError: false,\n      };\n    case FETCH_USERS_SUCCESS:\n      const payload = action.payload;\n      return {\n        ...state,\n        users: state.users.concat(payload),\n        loading: false,\n        fetchError: false,\n      };\n    case FETCH_USERS_FAILED:\n      return {\n        ...state,\n        loading: false,\n        fetchError: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_FAILED = 'FETCH_USERS_FAILED';\n","import { combineReducers } from 'redux';\n\nimport usersReducer from './users';\n\nexport default combineReducers({\n  users: usersReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION__: any;\n  }\n}\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","import styled from 'styled-components';\n\nexport const PageHeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const LoaderWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import * as actionTypes from '../actionTypes';\nimport { User } from '../../models/user';\nimport { API_URL } from 'helpers/constants';\nimport { httpGet } from 'helpers/apiHelpers';\n\n// Action to show loader while fetching data\nfunction loadUsers() {\n  return {\n    type: actionTypes.FETCH_USERS,\n  };\n}\n\n// Fetching users actions\nfunction fetchUsers() {\n  return (dispatch: Function) => {\n    dispatch(() => dispatch(loadUsers()));\n    setTimeout(() => {\n      httpGet(`${API_URL}/users`)\n        .then((res: any) => dispatch(fetchUsersSuccess(res)))\n        .catch(() => dispatch(fetchUsersFailed(true)));\n    }, 1000);\n  };\n}\n\nfunction fetchUsersFailed(failed: boolean) {\n  return {\n    type: actionTypes.FETCH_USERS_FAILED,\n    failed,\n  };\n}\n\nfunction fetchUsersSuccess(payload: User[]) {\n  return {\n    type: actionTypes.FETCH_USERS_SUCCESS,\n    payload,\n  };\n}\n\nexport { fetchUsers };\n","export const httpGet = (url: string) => {\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then((response) => response.json());\n};\n\nexport const httpDelete = (url: string) => {\n  return fetch(url, { method: 'DELETE' })\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then((response) => response.json());\n};\n","export const API_URL = 'https://jsonplaceholder.typicode.com';\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  position: relative;\n  padding: 0 20px;\n\n  @media (min-width: 768px) {\n    padding: 0 10%;\n  }\n`;\n","export const theme = {\n  // colors\n  lightGrey: '#acacac',\n  highlight: '#f0b270',\n  basicFont: '#4b4c4e',\n  bluePrimary: '#83a095',\n  blueBorder: '2px solid #83a095',\n  basicBackground: '#f5f6fb',\n  greenPrimary: '#7e9b91',\n  greenLight: '#bce4d3',\n  grey: '#979ca5',\n  white: '#fff',\n  black: '#000',\n  transparent: 'transparent',\n  bold: 700,\n  regular: 500,\n  // font size\n  tinyLabel: '9px',\n  largeTitle: '150px',\n  defaultTitle: '40px',\n  largeSubtitle: '25px',\n  defaultSubtitle: '15px',\n  // transitions\n  buttonTransition: 'all .2s linear',\n  // base button styles\n  background: {\n    primary: 'transparent',\n    action: '#83a095',\n    warning: 'transparent',\n    default: '#7e9b91',\n  },\n  font: {\n    primary: '#83a095',\n    action: '#fff',\n    warning: '#eb3b51',\n    default: '#fff',\n  },\n  border: {\n    primary: '#83a095',\n    action: '#83a095',\n    warning: 'transparent',\n    default: '#7e9b91',\n  },\n  backgroundHover: {\n    primary: '#83a095',\n    action: '#317efd',\n    warning: '#eb3b51',\n    default: 'transparent',\n  },\n  fontHover: {\n    primary: '#fff',\n    action: '#fff',\n    warning: '#fff',\n    default: '#7e9b91',\n  },\n  borderHover: {\n    primary: '#83a095',\n    action: '#317efd',\n    warning: '#eb3b51',\n    default: '#7e9b91',\n  },\n};\n","import styled from 'styled-components';\nimport { theme } from '../../app.styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(135, 136, 142, 0.65);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: ${theme.basicBackground};\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (min-width: 768px) {\n    position: relative;\n    width: 380px;\n    height: 570px;\n    border-radius: 10px;\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\nimport { theme } from 'app.styled';\n\ninterface TextProps {\n  highlight?: boolean;\n}\n\nexport const Text = styled.p<TextProps>`\n  margin: ${(props) => (props.highlight ? '0 0 10px 0' : '0')};\n  font-weight: ${(props) => (props.highlight ? theme.bold : theme.regular)};\n  color: ${(props) => (props.highlight ? theme.highlight : theme.basicFont)};\n  font-size: ${(props) => (props.highlight ? '14px' : '12px')};\n\n  @media (min-width: 768px) {\n    font-size: ${(props) => (props.highlight ? '18px' : '16px')};\n  }\n`;\n","import React from 'react';\nimport { Text } from 'components/BaseText/base-text.styled';\n\ninterface Props {\n  highlight?: boolean;\n  text: string;\n}\n\nconst BaseText: React.FC<Props> = (props) => {\n  const { highlight, text } = props;\n\n  return <Text highlight={highlight}>{text}</Text>;\n};\n\nexport default BaseText;\n","import { useEffect, useRef } from 'react';\n\nexport const usePreviousValue = (value: any) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport const toggleBodyOverflow = (overflow: 'scroll' | 'hidden') => {\n  return (document.body.style.overflow = overflow);\n};\n","import styled, { ThemedStyledProps } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { theme } from 'app.styled';\n\ninterface ButtonProps {\n  appearance?: 'primary' | 'action' | 'warning';\n}\n\nconst getStyles = (\n  props: ThemedStyledProps<ButtonProps, any>,\n  property: string,\n) => {\n  if (props.appearance === 'primary') {\n    return props.theme[property][props.appearance];\n  } else if (props.appearance === 'action') {\n    return props.theme[property][props.appearance];\n  } else if (props.appearance === 'warning') {\n    return props.theme[property][props.appearance];\n  }\n  return props.theme[property].default;\n};\n\nexport const Button = styled.button<ButtonProps>`\n  background-color: ${(props) => getStyles(props, 'background')};\n  color: ${(props) => getStyles(props, 'font')};\n  border: 1px solid ${(props) => getStyles(props, 'border')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  border-radius: 5px;\n  margin: 5px 0;\n  outline: none;\n  transition: ${theme.buttonTransition};\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) => getStyles(props, 'backgroundHover')};\n    color: ${(props) => getStyles(props, 'fontHover')};\n    border: 1px solid ${(props) => getStyles(props, 'borderHover')};\n  }\n\n  &:disabled {\n    background-color: ${theme.greenLight};\n    color: ${theme.white};\n    border: ${theme.greenLight};\n  }\n`;\n\nexport const Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  height: 11px;\n`;\n","import React from 'react';\nimport { Button, Icon } from 'components/BaseButton/base-button.styled';\nimport { IconName } from '@fortawesome/fontawesome-svg-core';\n\ninterface Props {\n  label: string;\n  onClick: () => void;\n  appearance?: 'action' | 'primary' | 'warning';\n  disabled?: boolean;\n  icon?: IconName;\n}\n\nconst BaseButton: React.FC<React.PropsWithChildren<Props>> = (props) => {\n  const { label, onClick, appearance, disabled, icon, children } = props;\n  return (\n    <Button disabled={disabled} appearance={appearance} onClick={onClick}>\n      {icon && <Icon icon={icon} />}\n      {children}\n      {label}\n    </Button>\n  );\n};\n\nexport default BaseButton;\n","import styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n  outline: 0;\n`;\n\nexport const Icon = styled(FontAwesomeIcon)`\n  font-size: 20px;\n  & path {\n    fill: ${(props) => props.theme.grey};\n  }\n`;\n","import React from 'react';\nimport { Button, Icon } from './close-button.styled';\n\ninterface CloseButton {\n  onClick: () => void;\n}\n\nconst CloseButton: React.FC<CloseButton> = (props) => {\n  return (\n    <Button onClick={props.onClick}>\n      <Icon icon=\"times\" />\n    </Button>\n  );\n};\n\nexport default CloseButton;\n","import React, { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  Overlay,\n  ModalContent,\n  ModalHeader,\n  TitleWrapper,\n} from './modal-wrapper.styled';\nimport BaseText from '../BaseText';\nimport { toggleBodyOverflow } from 'helpers/localStateHelpers';\nimport BaseButton from '../BaseButton';\nimport CloseButton from 'components/CloseButton';\nimport { IconName } from '@fortawesome/fontawesome-svg-core';\n\ninterface Props {\n  activator: any;\n  modalTitle?: string;\n  onSubmit?: () => void;\n  submitLabel?: string;\n  disabled?: boolean;\n  buttonAppereance?: 'primary' | 'action' | 'warning';\n  icon?: IconName;\n}\n\nconst ModalWrapper: React.FC<React.PropsWithChildren<Props>> = (props) => {\n  const {\n    activator,\n    modalTitle,\n    onSubmit,\n    submitLabel,\n    disabled,\n    buttonAppereance,\n    icon,\n    children,\n  } = props;\n\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (show) toggleBodyOverflow('hidden');\n    else toggleBodyOverflow('scroll');\n  }, [show]);\n\n  const onSubmitClick = () => {\n    setShow(false);\n    onSubmit && onSubmit();\n  };\n\n  const content = show && (\n    <Overlay>\n      <ModalContent>\n        <>\n          <ModalHeader>\n            <TitleWrapper>\n              {modalTitle && <BaseText highlight text={modalTitle} />}\n            </TitleWrapper>\n            <CloseButton onClick={() => setShow(false)} />\n          </ModalHeader>\n          {children}\n        </>\n        {onSubmit && submitLabel && (\n          <BaseButton\n            disabled={disabled}\n            label={submitLabel}\n            onClick={onSubmitClick}\n            appearance={buttonAppereance}\n            icon={icon}\n          />\n        )}\n      </ModalContent>\n    </Overlay>\n  );\n  return (\n    <>\n      {activator({ setShow })}\n      {createPortal(content, document.body)}\n    </>\n  );\n};\n\nexport default ModalWrapper;\n","import styled from 'styled-components';\n\nexport const ListItemWrapper = styled.div`\n  box-shadow: 4px 3px 10px 2px rgba(199, 199, 199, 1);\n  display: flex;\n  padding: 20px 30px;\n  border-radius: 10px;\n  margin-bottom: 15px;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  flex: 3;\n`;\n\nexport const ButtonWrapper = styled.div`\n  flex: 1;\n`;\n","import React from 'react';\nimport {\n  ListItemWrapper,\n  DetailsWrapper,\n  ButtonWrapper,\n} from './list-item.styled';\nimport BaseText from 'components/BaseText';\nimport BaseButton from 'components/BaseButton';\n\ninterface Props {\n  username: string;\n  email: string;\n  onItemClick: () => void;\n}\n\nconst ListItem: React.FC<Props> = (props) => {\n  const { username, email } = props;\n  return (\n    <ListItemWrapper>\n      <DetailsWrapper>\n        <BaseText highlight text={username} />\n        <BaseText text={email} />\n      </DetailsWrapper>\n      <ButtonWrapper>\n        <BaseButton\n          label=\"Check details\"\n          appearance=\"primary\"\n          onClick={props.onItemClick}\n        />\n      </ButtonWrapper>\n    </ListItemWrapper>\n  );\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const DetailsWrapper = styled.div`\n  margin-top: 20px;\n`;\n","import styled from 'styled-components';\nimport { theme } from 'app.styled';\n\nexport const DetailRow = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.div`\n  color: ${theme.lightGrey};\n  font-size: ${theme.tinyLabel};\n`;\n","import React from 'react';\nimport {\n  DetailRow,\n  Label,\n} from 'components/UserDetailRow/user-detail-row.styled';\nimport BaseText from 'components/BaseText';\n\ninterface Props {\n  label: string;\n  text: string;\n  secondLineText?: string;\n}\n\nconst UserDetailRow: React.FC<Props> = (props) => {\n  const { label, text, secondLineText } = props;\n\n  return (\n    <DetailRow>\n      <Label>{label}</Label>\n      <BaseText text={text} />\n      {secondLineText && <BaseText text={secondLineText} />}\n    </DetailRow>\n  );\n};\n\nexport default UserDetailRow;\n","import React from 'react';\nimport { DetailsWrapper } from 'components/UserContactDetails/user-contact-details.styled';\nimport UserDetailRow from 'components/UserDetailRow';\nimport { Address } from 'models/address';\n\ninterface Props {\n  name: string;\n  userName: string;\n  phone: string;\n  email: string;\n  address: Address;\n}\n\nconst UserContactDetails: React.FC<Props> = (props) => {\n  const { name, userName, phone, email, address } = props;\n\n  const composeFirstLineAddress = () => {\n    return `${address.suite} ${address.street},`;\n  };\n\n  const composeSecondLineAddress = () => {\n    return `${address.zipcode} ${address.city}`;\n  };\n\n  return (\n    <DetailsWrapper>\n      <UserDetailRow label=\"Name:\" text={name} />\n      <UserDetailRow label=\"User name:\" text={userName} />\n      <UserDetailRow label=\"Phone number:\" text={phone} />\n      <UserDetailRow label=\"Email:\" text={email} />\n      <UserDetailRow\n        label=\"Address\"\n        text={composeFirstLineAddress()}\n        secondLineText={composeSecondLineAddress()}\n      />\n    </DetailsWrapper>\n  );\n};\n\nexport default UserContactDetails;\n","import styled from 'styled-components';\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 0 50px;\n`;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 0;\n`;\n","import React from 'react';\nimport { HeaderWrapper } from 'components/ModalHeader/modal-header.styled';\nimport BaseText from 'components/BaseText';\n\ninterface Props {\n  title: string;\n}\n\nconst ModalHeader: React.FC<Props> = (props) => {\n  return (\n    <HeaderWrapper>\n      <BaseText highlight text={props.title} />\n    </HeaderWrapper>\n  );\n};\n\nexport default ModalHeader;\n","import React from 'react';\nimport ModalWrapper from 'components/ModalWrapper';\nimport ListItem from 'components/ListItem';\nimport UserContactDetails from 'components/UserContactDetails';\nimport { ContentWrapper } from 'components/ModalUserDetails/modal-user-details.styled';\nimport { Address } from 'models/address';\nimport ModalHeader from 'components/ModalHeader';\n\ninterface Props {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  phone: string;\n  address: Address;\n  onDelete: (id: string) => void;\n}\n\nconst ModalUserDetails: React.FC<Props> = (props) => {\n  const { id, name, username, email, phone, address, onDelete } = props;\n  return (\n    <ModalWrapper\n      onSubmit={() => onDelete(id.toString())}\n      icon=\"trash-alt\"\n      submitLabel=\"Delete user\"\n      buttonAppereance=\"warning\"\n      activator={({ setShow }: { setShow: (show: boolean) => void }) => (\n        <ListItem\n          username={username}\n          email={email}\n          onItemClick={() => setShow(true)}\n        />\n      )}\n    >\n      <ContentWrapper>\n        <ModalHeader title={`${username}'s details`} />\n        <UserContactDetails\n          name={name}\n          userName={username}\n          phone={phone}\n          email={email}\n          address={address}\n        />\n      </ContentWrapper>\n    </ModalWrapper>\n  );\n};\n\nexport default ModalUserDetails;\n","import React from 'react';\nimport { ListContainer } from './list-wrapper.styled';\nimport ModalUserDetails from '../ModalUserDetails';\nimport { User } from 'models/user';\n\ninterface Props {\n  items: User[];\n  onDelete: (id: string) => void;\n}\n\nconst ListWrapper: React.FC<Props> = (props) => {\n  const { items, onDelete } = props;\n  return (\n    <ListContainer>\n      {items.map((item) => (\n        <ModalUserDetails\n          key={item.id}\n          id={item.id}\n          name={item.name}\n          username={item.username}\n          email={item.email}\n          phone={item.phone}\n          address={item.address}\n          onDelete={onDelete}\n        />\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default ListWrapper;\n","import styled, { ThemedStyledProps } from 'styled-components';\nimport { theme } from '../../app.styled';\n\ninterface PageTitleProps {\n  size?: 'large';\n}\n\nconst fontSize = (props: ThemedStyledProps<PageTitleProps, any>) => {\n  if (props.size === 'large') {\n    return props.theme.largeTitle;\n  }\n  return props.theme.defaultTitle;\n};\n\nexport const Title = styled.h1<PageTitleProps>`\n  color: ${theme.bluePrimary};\n  text-transform: uppercase;\n  font-size: ${(props) => fontSize(props)};\n  font-weight: ${theme.bold};\n  margin: 0 0 15px;\n`;\n","import React from 'react';\nimport { Title } from './page-title.styled';\n\ninterface Props {\n  title: string;\n  size?: 'large';\n}\nconst PageTitle: React.FC<Props> = (props) => {\n  return <Title size={props.size}>{props.title}</Title>;\n};\n\nexport default PageTitle;\n","import styled, { ThemedStyledProps } from 'styled-components';\nimport { theme } from '../../app.styled';\n\ninterface PageSubtitleProps {\n  size?: 'large';\n}\n\nconst fontSize = (props: ThemedStyledProps<PageSubtitleProps, any>) => {\n  if (props.size === 'large') {\n    return props.theme.largeSubtitle;\n  }\n  return props.theme.defaultSubtitle;\n};\n\nexport const Subtitle = styled.span<PageSubtitleProps>`\n  color: ${theme.black};\n  font-size: ${(props) => fontSize(props)};\n  margin-bottom: 30px;\n`;\n","import React from 'react';\nimport { Subtitle } from './page-subtitle.styled';\n\ninterface Props {\n  title: string;\n  size?: 'large';\n}\n\nconst PageSubtitle: React.FC<Props> = (props) => {\n  return <Subtitle size={props.size}>{props.title}</Subtitle>;\n};\n\nexport default PageSubtitle;\n","import React from 'react';\nimport DotLoader from 'react-spinners/DotLoader';\n\ninterface Props {\n  size: number;\n  color: string;\n}\n\nconst Loader: React.FC<Props> = (props) => {\n  return <DotLoader size={props.size} color={props.color} />;\n};\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { History } from 'history';\nimport { PageHeaderWrapper, LoaderWrapper } from './home.styled';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RootState } from 'models/rootState';\nimport { fetchUsers } from 'redux/actions';\nimport { User } from 'models/user';\nimport ListWrapper from 'components/ListWrapper';\nimport PageTitle from 'components/PageTitle';\nimport PageSubtitle from 'components/PageSubtitle';\nimport { theme } from 'app.styled';\nimport Loader from 'components/Loader';\ntoast.configure();\n\ninterface Props {\n  fetchUsers: () => void;\n  users: User[];\n  history: History;\n  fetchError: boolean;\n  loading: boolean;\n}\n\nconst Home: React.FC<Props> = (props) => {\n  const { fetchUsers, users, fetchError, loading } = props;\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    fetchError &&\n      toast.error(\"Sorry! Couldn't fetch your users at the moment.\");\n  }, [fetchError]);\n\n  const showDeleteUserError = () => {\n    toast.error('Sorry! Removing users is not available at the moment.');\n  };\n\n  if (loading && users.length === 0) {\n    return (\n      <LoaderWrapper>\n        <Loader color={theme.greenPrimary} size={100} />\n      </LoaderWrapper>\n    );\n  } else if (fetchError) {\n    return (\n      <PageHeaderWrapper>\n        <PageTitle size=\"large\" title=\"Oops!\" />\n        <PageSubtitle\n          size=\"large\"\n          title=\"Something went wrong, please try again later.\"\n        />\n      </PageHeaderWrapper>\n    )\n  }\n  return (\n    <>\n      <PageHeaderWrapper>\n        <PageTitle title=\"Your users list\" />\n        <PageSubtitle title=\"Click on user to get some details\" />\n      </PageHeaderWrapper>\n      <ListWrapper items={users} onDelete={showDeleteUserError} />\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  const users = state.users.users;\n  const fetchError = state.users.fetchError;\n  const loading = state.users.loading;\n  return {\n    users,\n    fetchError,\n    loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Function) => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nexport const ButtonWrapper = styled.div`\n  width: 150px;\n`;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PageWrapper, ButtonWrapper } from './not-found.styled';\nimport PageTitle from 'components/PageTitle';\nimport PageSubtitle from 'components/PageSubtitle';\nimport BaseButton from 'components/BaseButton';\n\nconst NotFound = () => {\n  let history = useHistory();\n\n  const goToHomepage = () => {\n    history.push('/');\n  };\n\n  return (\n    <PageWrapper>\n      <PageTitle size=\"large\" title=\"Oops!\" />\n      <PageSubtitle\n        size=\"large\"\n        title=\"We can't find the page you're looking for.\"\n      />\n      <ButtonWrapper>\n        <BaseButton\n          label=\"Visit homepage\"\n          onClick={goToHomepage}\n          appearance=\"primary\"\n        />\n      </ButtonWrapper>\n    </PageWrapper>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport store from './redux/store';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Home from './screens/Home';\nimport NotFound from 'screens/NotFound';\nimport { theme } from 'app.styled';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faTrashAlt, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faTrashAlt, faPlus, faTimes)\n\nfunction App() {\n  const history = createBrowserHistory();\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <ThemeProvider theme={theme}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route component={NotFound} />\n          </Switch>\n        </ThemeProvider>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}